// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model Organization {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  users     User[]
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("organizations")
}

model User {
  id             String        @id @default(uuid()) @db.Uuid
  email          String        @unique
  password       String
  firstName      String
  lastName       String
  role           Role          @default(USER)
  organizationId String        @db.Uuid
  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  tasks          Task[]        @relation("UserTasks")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@index([organizationId])
  @@map("users")
}

model Task {
  id             String        @id @default(uuid()) @db.Uuid
  title          String
  description    String?
  status         TaskStatus    @default(PENDING)
  priority       TaskPriority  @default(MEDIUM)
  dueDate        DateTime?
  createdById    String        @db.Uuid
  createdBy      User          @relation("UserTasks", fields: [createdById], references: [id], onDelete: Cascade)
  organizationId String        @db.Uuid
  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@index([organizationId])
  @@index([createdById])
  @@map("tasks")
}
